#!/bin/bash
SCREEN_NAME=MinecraftForgeServer
MCSERVER_PATH=${MCSERVER_PATH:-"/srv/minecraft"}
MINECRAFT_VERSION=${MINECRAFT_VERSION:-1.8}
MCFORGE_VERSION=${MCFORGE_VERSION:-"11.14.3.1515"}
MCFORGE_INSTALLER_JAR=${MCFORGE_INSTALLER_JAR:-"forge-installer.jar"}
MCFORGE_INSTALLER_URL="http://files.minecraftforge.net/maven/net/minecraftforge/forge/$MINECRAFT_VERSION-$MCFORGE_VERSION/forge-$MINECRAFT_VERSION-$MCFORGE_VERSION-installer.jar"

MCFORGE_SERVER_JAR="forge-$MINECRAFT_VERSION-$MCFORGE_VERSION-universal.jar"

JAVA_XMX=${JAVA_XMX:-"1G"}
JAVA_XMS=${JAVA_XMS:-"1G"}
JAVA_PERMSIZE=${JAVA_PERMSIZE:-"755m"}

MINECRAFT_OPTS=${MINECRAFT_OPTS:-"-server -Xmx$JAVA_XMX -Xms$JAVA_XMS -XX:MaxPermSize=$JAVA_PERMSIZE -XX:+UseParNewGC -XX:+UseConcMarkSweepGC"}

if [ $# -eq 0 ]; then
    echo "用法: `basename $0` {start|stop|restart|update <minecraft version> <forge version>}" >&2
    exit 1
fi

check_env() {
    if [ "$MINECRAFT_EULA" == "true" ]; then
        echo "更新 $MCSERVER_PATH/eula.txt 中"
        echo "eula=$MINECRAFT_EULA" > $MCSERVER_PATH/eula.txt
    else
        >&2 echo "Mojang 要求你必须同意 EULA. 你需要设置 MINECRAFT_EULA 环境变量为 true."
        exit 1
    fi

    # Do not allow to run if there is no DEFAULT_OP
    if [ -z "$DEFAULT_OP" ]; then
        >&2 echo "DEFAULT_OP 是必要的. 请设置以继续进程."
        exit 1
    fi
}

download_server() {
    # Download the Minecraft server JAR if it does not exist.
    if [ ! -f "$MCSERVER_PATH/$MCFORGE_INSTALLER_JAR" ]; then
        echo "下载 $MCFORGE_INSTALLER_JAR"
        curl -f -S $MCFORGE_INSTALLER_URL -o $MCSERVER_PATH/$MCFORGE_INSTALLER_JAR

        if [ $? -ne 0 ]; then
            >&2 echo "无法下载 $MCFORGE_INSTALLER_JAR."
            exit 1
        fi
    fi
}
install_server() {
    # Download the Minecraft server JAR if it does not exist.
    if [ -f "$MCSERVER_PATH/$MCFORGE_INSTALLER_JAR" ]; then
        echo "安装 forge V$MCFORGE_VERSION"
        java -server -jar $MCSERVER_PATH/$MCFORGE_INSTALLER_JAR --installServer
    else
        echo "无法安装 forge V$MCFORGE_VERSION"
        echo "$MCSERVER_PATH/$MCFORGE_INSTALLER_JAR 未找到"
    fi
}
first_run() {
    if [ ! -f "$MCSERVER_PATH/server.properties" ]; then
        echo "创建 $MCSERVER_PATH/server.properties"
        echo "generator-settings=$GENERATOR_SETTINGS" >> $MCSERVER_PATH/server.properties
        echo "op-permission-level=${OP_PERMISSION_LEVEL:-4}" >> $MCSERVER_PATH/server.properties
        echo "allow-nether=${ALLOW_NETHER:-true}" >> $MCSERVER_PATH/server.properties
        echo "level-name=${LEVEL_NAME:-world}" >> $MCSERVER_PATH/server.properties
        echo "enable-query=${ENABLE_QUERY:-false}" >> $MCSERVER_PATH/server.properties
        echo "allow-flight=${ALLOW_FLIGHT:-false}" >> $MCSERVER_PATH/server.properties
        echo "announce-player-achievements=${ANNOUNCE_PLAYER_ACHIEVEMENTS:-true}" >> $MCSERVER_PATH/server.properties
        echo "server-port=25565" >> $MCSERVER_PATH/server.properties
        echo "level-type=${LEVEL_TYPE:-DEFAULT}" >> $MCSERVER_PATH/server.properties
        echo "enable-rcon=${ENABLE_RCON:-false}" >> $MCSERVER_PATH/server.properties
        echo "rcon_password=${RCON_PASSWORD:-12345678}" >> $MCSERVER_PATH/server.properties
        echo "force-gamemode=${FORCE_GAMEMODE:-false}" >> $MCSERVER_PATH/server.properties
        echo "level-seed=$LEVEL_SEED" >> $MCSERVER_PATH/server.properties
        echo "server-ip=$SERVER_IP" >> $MCSERVER_PATH/server.properties
        echo "max-build-height=${MAX_BUILD_HEIGHT:-256}" >> $MCSERVER_PATH/server.properties
        echo "spawn-npcs=${SPAWN_NPCS:-true}" >> $MCSERVER_PATH/server.properties
        echo "white-list=${WHITE_LIST:-true}" >> $MCSERVER_PATH/server.properties
        echo "spawn-animals=${SPAWN_ANIMALS:-true}" >> $MCSERVER_PATH/server.properties
        echo "snooper-enabled=${SNOOPER_ENABLED:-true}" >> $MCSERVER_PATH/server.properties
        echo "online-mode=${ONLINE_MODE:-true}" >> $MCSERVER_PATH/server.properties
        echo "resource-pack=$RESOURCE_PACK" >> $MCSERVER_PATH/server.properties
        echo "pvp=${PVP:-true}" >> $MCSERVER_PATH/server.properties
        echo "difficulty=${DIFFICULTY:-2}" >> $MCSERVER_PATH/server.properties
        echo "enable-command-block=${ENABLE_COMMAND_BLOCK:-true}" >> $MCSERVER_PATH/server.properties
        echo "player-idle-timeout=${PLAYER_IDLE_TIMEOUT:-0}" >> $MCSERVER_PATH/server.properties
        echo "gamemode=${GAMEMODE:-0}" >> $MCSERVER_PATH/server.properties
        echo "max-players=${MAX_PLAYERS:-20}" >> $MCSERVER_PATH/server.properties
        echo "spawn-monsters=${SPAWN_MONSTERS:-true}" >> $MCSERVER_PATH/server.properties
        echo "view-distance=${VIEW_DISTANCE:-10}" >> $MCSERVER_PATH/server.properties
        echo "generate-structures=${GENERATE_STRUCTURES:-true}" >> $MCSERVER_PATH/server.properties
    fi

    # Create default ops.txt if ops.json does not exist yet.
    if [ ! -f $MCSERVER_PATH/ops.json ]; then
        echo "把 $DEFAULT_OP 添加到 OP 列表."
        echo "$DEFAULT_OP" > $MCSERVER_PATH/ops.txt
    fi
}

update_permissions() {
    chown -R minecraft:minecraft $MCSERVER_PATH
}

server_start() {
    echo "服务器没有运行 - 所以即将开始运行"
    java $MINECRAFT_OPTS -jar $MCSERVER_PATH/$MCFORGE_SERVER_JAR
}

case "$1" in
    run)
        check_env
        download_server
        install_server
        first_run
        server_start
        ;;
    *)
        exec "$@"
esac